var common_locale = { lc: { ar: function (e) { return 0 === e ? "zero" : 1 == e ? "one" : 2 == e ? "two" : e % 100 >= 3 && 10 >= e % 100 && e == Math.floor(e) ? "few" : e % 100 >= 11 && 99 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, en: function (e) { return 1 === e ? "one" : "other" }, bg: function (e) { return 1 === e ? "one" : "other" }, bn: function (e) { return 1 === e ? "one" : "other" }, ca: function (e) { return 1 === e ? "one" : "other" }, cs: function (e) { return 1 == e ? "one" : 2 == e || 3 == e || 4 == e ? "few" : "other" }, da: function (e) { return 1 === e ? "one" : "other" }, de: function (e) { return 1 === e ? "one" : "other" }, el: function (e) { return 1 === e ? "one" : "other" }, es: function (e) { return 1 === e ? "one" : "other" }, et: function (e) { return 1 === e ? "one" : "other" }, eu: function (e) { return 1 === e ? "one" : "other" }, fa: function () { return "other" }, fi: function (e) { return 1 === e ? "one" : "other" }, fil: function (e) { return 0 === e || 1 == e ? "one" : "other" }, fr: function (e) { return 0 === Math.floor(e) || 1 == Math.floor(e) ? "one" : "other" }, ga: function (e) { return 1 == e ? "one" : 2 == e ? "two" : "other" }, gl: function (e) { return 1 === e ? "one" : "other" }, he: function (e) { return 1 === e ? "one" : "other" }, hi: function (e) { return 0 === e || 1 == e ? "one" : "other" }, hr: function (e) { return e % 10 == 1 && e % 100 != 11 ? "one" : e % 10 >= 2 && 4 >= e % 10 && (12 > e % 100 || e % 100 > 14) && e == Math.floor(e) ? "few" : e % 10 === 0 || e % 10 >= 5 && 9 >= e % 10 || e % 100 >= 11 && 14 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, hu: function () { return "other" }, id: function () { return "other" }, is: function (e) { return e % 10 === 1 && e % 100 !== 11 ? "one" : "other" }, it: function (e) { return 1 === e ? "one" : "other" }, ja: function () { return "other" }, ko: function () { return "other" }, lt: function (e) { return e % 10 == 1 && (11 > e % 100 || e % 100 > 19) ? "one" : e % 10 >= 2 && 9 >= e % 10 && (11 > e % 100 || e % 100 > 19) && e == Math.floor(e) ? "few" : "other" }, lv: function (e) { return 0 === e ? "zero" : e % 10 == 1 && e % 100 != 11 ? "one" : "other" }, mk: function (e) { return e % 10 == 1 && 11 != e ? "one" : "other" }, mr: function (e) { return 1 === e ? "one" : "other" }, ms: function () { return "other" }, mt: function (e) { return 1 == e ? "one" : 0 === e || e % 100 >= 2 && 4 >= e % 100 && e == Math.floor(e) ? "few" : e % 100 >= 11 && 19 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, nl: function (e) { return 1 === e ? "one" : "other" }, no: function (e) { return 1 === e ? "one" : "other" }, pl: function (e) { return 1 == e ? "one" : e % 10 >= 2 && 4 >= e % 10 && (12 > e % 100 || e % 100 > 14) && e == Math.floor(e) ? "few" : e % 10 === 0 || 1 != e && e % 10 == 1 || (e % 10 >= 5 && 9 >= e % 10 || e % 100 >= 12 && 14 >= e % 100) && e == Math.floor(e) ? "many" : "other" }, pt: function (e) { return 1 === e ? "one" : "other" }, ro: function (e) { return 1 == e ? "one" : 0 === e || 1 != e && e % 100 >= 1 && 19 >= e % 100 && e == Math.floor(e) ? "few" : "other" }, ru: function (e) { return e % 10 == 1 && e % 100 != 11 ? "one" : e % 10 >= 2 && 4 >= e % 10 && (12 > e % 100 || e % 100 > 14) && e == Math.floor(e) ? "few" : e % 10 === 0 || e % 10 >= 5 && 9 >= e % 10 || e % 100 >= 11 && 14 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, sk: function (e) { return 1 == e ? "one" : 2 == e || 3 == e || 4 == e ? "few" : "other" }, sl: function (e) { return e % 100 == 1 ? "one" : e % 100 == 2 ? "two" : e % 100 == 3 || e % 100 == 4 ? "few" : "other" }, sq: function (e) { return 1 === e ? "one" : "other" }, sr: function (e) { return e % 10 == 1 && e % 100 != 11 ? "one" : e % 10 >= 2 && 4 >= e % 10 && (12 > e % 100 || e % 100 > 14) && e == Math.floor(e) ? "few" : e % 10 === 0 || e % 10 >= 5 && 9 >= e % 10 || e % 100 >= 11 && 14 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, sv: function (e) { return 1 === e ? "one" : "other" }, ta: function (e) { return 1 === e ? "one" : "other" }, th: function () { return "other" }, tr: function (e) { return 1 === e ? "one" : "other" }, uk: function (e) { return e % 10 == 1 && e % 100 != 11 ? "one" : e % 10 >= 2 && 4 >= e % 10 && (12 > e % 100 || e % 100 > 14) && e == Math.floor(e) ? "few" : e % 10 === 0 || e % 10 >= 5 && 9 >= e % 10 || e % 100 >= 11 && 14 >= e % 100 && e == Math.floor(e) ? "many" : "other" }, ur: function (e) { return 1 === e ? "one" : "other" }, vi: function () { return "other" }, zh: function () { return "other" } }, c: function (e, n) { if (!e) throw new Error("MessageFormat: Data required for '" + n + "'.") }, n: function (e, n, r) { if (isNaN(e[n])) throw new Error("MessageFormat: '" + n + "' isn't a number."); return e[n] - (r || 0) }, v: function (e, n) { return common_locale.c(e, n), e[n] }, p: function (e, n, r, o, t) { return common_locale.c(e, n), e[n] in t ? t[e[n]] : (n = common_locale.lc[o](e[n] - r), n in t ? t[n] : t.other) }, s: function (e, n, r) { return common_locale.c(e, n), e[n] in r ? r[e[n]] : r.other } }; (window.blockly = window.blockly || {}).common_locale = { and: function () { return "y" }, animationMode: function () { return "Animaci\xf3n" }, backToPreviousLevel: function () { return "Volver al nivel anterior" }, blocklyMessage: function () { return "Blockly" }, blocks: function () { return "bloques" }, booleanFalse: function () { return "falso" }, booleanTrue: function () { return "verdadero" }, catActions: function () { return "Acciones" }, catColour: function () { return "Color" }, catLists: function () { return "Listas" }, catLogic: function () { return "L\xf3gica" }, catLoops: function () { return "Bucles" }, catMath: function () { return "Matem\xe1ticas" }, catProcedures: function () { return "Funciones" }, catText: function () { return "Texto" }, catVariables: function () { return "Variables" }, choosePrefix: function () { return "Elegir..." }, clearPuzzle: function () { return "Reiniciar el nivel" }, clearPuzzleConfirm: function () { return "Esto reiniciará el nivel desde el principio borrando todo el proceso que hayas realizado." }, clearPuzzleConfirmHeader: function () { return "\xbfSeguro que quieres reiniciar el nivel?" }, codeMode: function () { return "C\xf3digo" }, codeTooltip: function () { return "Ver el c\xf3digo JavaScript generado." }, completedWithoutRecommendedBlock: function (e) { return "\xa1Felicidades! Has completado el Nivel " + common_locale.v(e, "puzzleNumber") + ". (Pero puedes usar un bloque diferente para un c\xf3digo m\xe1s fuerte.)" }, "continue": function () { return "Continuar" }, copy: function () { return "Copiar" }, debugConsoleHeader: function () { return "Debug Console" }, debugCommandsHeaderWhenOpen: function () { return "Debug Commands" }, debugCommandsHeaderWhenClosed: function () { return "Show Debug Commands" }, debugWatchHeader: function () { return "Mirar" }, debugWatchNotAvailable: function () { return "<not available>" }, defaultTwitterText: function () { return "Comprueba lo que hice" }, designMode: function () { return "Dise\xf1o" }, dialogCancel: function () { return "Cancelar" }, dialogOK: function () { return "OK" }, directionEastLetter: function () { return "E" }, directionNorthLetter: function () { return "N" }, directionSouthLetter: function () { return "S" }, directionWestLetter: function () { return "O" }, dropletBlock_addOperator_description: function () { return "Suma dos n\xfameros" }, dropletBlock_addOperator_signatureOverride: function () { return "A\xf1ade un operador" }, dropletBlock_andOperator_description: function () { return "Es verdadero solo si las dos expresiones son verdaderas de otra manera es falso" }, dropletBlock_andOperator_signatureOverride: function () { return 'Operador boleano "AND"' }, dropletBlock_assign_x_description: function () { return "Asigna un valor a una variable existente. Por ejemplo, x = 0;" }, dropletBlock_assign_x_signatureOverride: function () { return "Asignar una variable" }, dropletBlock_callMyFunction_description: function () { return "Llama a una funci\xf3n nombrada que no tiene par\xe1metros" }, dropletBlock_callMyFunction_n_description: function () { return "Llama a una funci\xf3n nombrada que tiene uno o m\xe1s par\xe1metros" }, dropletBlock_callMyFunction_n_signatureOverride: function () { return "Llamar a una funci\xf3n con par\xe1metros" }, dropletBlock_callMyFunction_signatureOverride: function () { return "Llamar una funci\xf3n" }, dropletBlock_comment_description: function () { return "Escriba una descripci\xf3n del c\xf3digo" }, dropletBlock_comment_signatureOverride: function () { return "comentario" }, dropletBlock_declareAssign_x_array_1_4_description: function () { return "Defina una variable y asignela a una secuencia, con su valor inicial  " }, dropletBlock_declareAssign_x_array_1_4_signatureOverride: function () { return "Defina una variable asignada a una secuencia" }, dropletBlock_declareAssign_x_description: function () { return "Declara una variable con el nombre dado despu\xe9s de 'var', y le asigna el valor en el lado derecho de la expresi\xf3n" }, dropletBlock_declareAssign_x_signatureOverride: function () { return "Declare una variable" }, dropletBlock_declareAssign_x_prompt_description: function () { return "Defina como el code podra usar la variable y asignarle un valor inicial dado por el usuario" }, dropletBlock_declareAssign_x_prompt_signatureOverride: function () { return "Solicite al usuario un valor y almacenelo" }, dropletBlock_declareAssign_x_promptNum_description: function () { return "Declares that the code will now use a variable and assign it an initial numerical value provided by the user" }, dropletBlock_declareAssign_x_promptNum_signatureOverride: function () { return "Prompt the user for a numerical value and store it" }, dropletBlock_declareNoAssign_x_description: function () { return "Declares a variable with the given name after 'var'" }, dropletBlock_declareNoAssign_x_signatureOverride: function () { return "Declare una variable" }, dropletBlock_divideOperator_description: function () { return "Dividir dos n\xfameros" }, dropletBlock_divideOperator_signatureOverride: function () { return "Operador divisor" }, dropletBlock_equalityOperator_description: function () { return "Comprueba si dos valores son iguales. Devuelve true si el valor del lado izquierdo de la expresi\xf3n es igual al valor en el lado derecho de la expresi\xf3n y false en caso contrario" }, dropletBlock_equalityOperator_signatureOverride: function () { return "Operador de igualdad" }, dropletBlock_forLoop_i_0_4_description: function () { return "Crea un bucle que consiste en una expresi\xf3n de inicializaci\xf3n, una expresi\xf3n condicional, una expresi\xf3n incremental y un bloque de instrucciones los cuales se ejecutan con cada iteraci\xf3n del bucle" }, dropletBlock_forLoop_i_0_4_signatureOverride: function () { return 'bucle "for"' }, dropletBlock_functionParams_n_description: function () { return "Un conjunto de instrucciones que toma uno o mas par\xe1metros y realiza una tarea o calcula un valor, cuando se manda llamar la funci\xf3n" }, dropletBlock_functionParams_n_signatureOverride: function () { return "Define una funci\xf3n con parametros" }, dropletBlock_functionParams_none_description: function () { return "Un conjunto de instrucciones que realiza una tarea o calcula un valor, cuando se manda llamar la funci\xf3n" }, dropletBlock_functionParams_none_signatureOverride: function () { return "Define una funci\xf3n" }, dropletBlock_getTime_description: function () { return "Obtener la hora actual en milisegundos" }, dropletBlock_greaterThanOperator_description: function () { return "Comprueba si un n\xfamero es mayor que otro n\xfamero. Devuelve true si el valor del lado izquierdo de la expresi\xf3n es estrictamente mayor que el valor en el lado derecho de la expresi\xf3n" }, dropletBlock_greaterThanOperator_signatureOverride: function () { return "Operador mayor que" }, dropletBlock_greaterThanOrEqualOperator_description: function () { return "Tests whether a value is greater than or equal to another value. Returns true if the value on the left-hand side of the expression is greater than or equal to the value on the right-hand side of the expression." }, dropletBlock_greaterThanOrEqualOperator_signatureOverride: function () { return "Operador mayor o igual" }, dropletBlock_ifBlock_description: function () { return "Se ejecuta un bloque de sentencias si la condici\xf3n especificada es verdadera" }, dropletBlock_ifBlock_signatureOverride: function () { return 'instrucci\xf3n "if"' }, dropletBlock_ifElseBlock_description: function () { return "Se ejecuta un bloque de sentencias si la condici\xf3n especificada es verdadera; de lo contrario, se ejecutan el bloque de sentencias en la cl\xe1usula else" }, dropletBlock_ifElseBlock_signatureOverride: function () { return 'Instruccion "if/else"' }, dropletBlock_inequalityOperator_description: function () { return "Comprueba si dos valores no son iguales. Devuelve true si el valor del lado izquierdo de la expresi\xf3n no es igual al valor en el lado derecho de la expresi\xf3n" }, dropletBlock_inequalityOperator_signatureOverride: function () { return "Operador de desigualdad" }, dropletBlock_lessThanOperator_description: function () { return "Comprueba si un valor es menor que otro valor. Devuelve true si el valor del lado izquierdo de la expresi\xf3n es estrictamente menor que el valor en el lado derecho de la expresi\xf3n" }, dropletBlock_lessThanOperator_signatureOverride: function () { return "Operador menor que" }, dropletBlock_lessThanOrEqualOperator_description: function () { return "Comprueba si un valor es menor o igual que otro. Devuelve verdadero si el calor del lado izquierdo de la expresi\xf3n es inferior al valor del lado derecho de la expresi\xf3n." }, dropletBlock_lessThanOrEqualOperator_signatureOverride: function () { return "Operador menor o igual" }, dropletBlock_mathAbs_description: function () { return "Devuelve el valor absoluto de x" }, dropletBlock_mathAbs_param0: function () { return "x" }, dropletBlock_mathAbs_param0_description: function () { return "Un n\xfamero arbitrario." }, dropletBlock_mathAbs_signatureOverride: function () { return "Math.abs(x)" }, dropletBlock_mathMax_description: function () { return "Devuelve el valor m\xednimo entre uno o mas valores n1, n2, ..., nX" }, dropletBlock_mathMax_param0: function () { return "n1, n2,..., nX" }, dropletBlock_mathMax_param0_description: function () { return "Uno o m\xe1s n\xfameros para comparar." }, dropletBlock_mathMax_signatureOverride: function () { return "Math.max(n1, n2, ..., nX)" }, dropletBlock_mathMin_description: function () { return "Devuelve el valor m\xednimo entre uno o mas valores n1, n2, ..., nX" }, dropletBlock_mathMin_param0: function () { return "n1, n2,..., nX" }, dropletBlock_mathMin_param0_description: function () { return "Uno o m\xe1s n\xfameros para comparar." }, dropletBlock_mathMin_signatureOverride: function () { return "Math.min(n1, n2, ..., nX)" }, dropletBlock_mathRandom_description: function () { return "Devuelve un n\xfamero aleatorio desde 0 (inclu\xeddo) hasta 1 (no inclu\xeddo)" }, dropletBlock_mathRandom_signatureOverride: function () { return "Math.random()" }, dropletBlock_mathRound_description: function () { return "Redondea un n\xfamero al entero m\xe1s cercano" }, dropletBlock_mathRound_param0: function () { return "x" }, dropletBlock_mathRound_param0_description: function () { return "Un n\xfamero arbitrario." }, dropletBlock_mathRound_signatureOverride: function () { return "Math.round(x)" }, dropletBlock_multiplyOperator_description: function () { return "Multiplicar dos n\xfameros" }, dropletBlock_multiplyOperator_signatureOverride: function () { return "Operador de multiplicaci\xf3n" }, dropletBlock_notOperator_description: function () { return "Devuelve false si la expresi\xf3n se puede convertir a verdadero; de lo contrario, devuelve verdadero" }, dropletBlock_notOperator_signatureOverride: function () { return "Operador booleano NOT" }, dropletBlock_orOperator_description: function () { return "Devuelve verdadero cuando cualquier expresi\xf3n es verdadero y falso si no" }, dropletBlock_orOperator_signatureOverride: function () { return 'Operador boleano "OR"' }, dropletBlock_randomNumber_description: function () { return "Devuelve un n\xfamero aleatorio en un rango cerrado desde min a max." }, dropletBlock_randomNumber_param0: function () { return "min" }, dropletBlock_randomNumber_param0_description: function () { return "El m\xednimo n\xfamero devuelto" }, dropletBlock_randomNumber_param1: function () { return "max" }, dropletBlock_randomNumber_param1_description: function () { return "El n\xfamero m\xe1ximo devuelto" }, dropletBlock_return_description: function () { return "Regresa un valor de la funci\xf3n" }, dropletBlock_return_signatureOverride: function () { return "volver" }, dropletBlock_setAttribute_description: function () { return "Establece el valor dado" }, dropletBlock_subtractOperator_description: function () { return "Resta dos numeros" }, dropletBlock_subtractOperator_signatureOverride: function () { return "Operador de resta" }, dropletBlock_whileBlock_description: function () { return "Crea un bucle que consta de una expresi\xf3n condicional y un bloque de comandos ejecutados en cada iteraci\xf3n del bucle. El bucle contin\xfaa ejecutar mientras la condici\xf3n se eval\xfaa como true" }, dropletBlock_whileBlock_signatureOverride: function () { return 'bucle "while"' }, emptyBlockInFunction: function (e) { return "La funci\xf3n " + common_locale.v(e, "name") + " tiene una entrada sin rellenar." }, emptyBlockInVariable: function (e) { return "La variable " + common_locale.v(e, "name") + " tiene una entrada sin rellenar." }, emptyBlocksErrorMsg: function () { return 'Los bloques "repetir" o "si" deben tener otros bloques dentro de ellos para funcionar. Aseg\xfarate que el bloque interno quede correctamente dentro del bloque que lo contiene.' }, emptyExampleBlockErrorMsg: function (e) { return "Necesita al menos dos ejemplos de la funci\xf3n " + common_locale.v(e, "functionName") + ". Aseg\xfarese de que cada ejemplo tiene un llamado y un resultado." }, emptyFunctionBlocksErrorMsg: function () { return "El bloque de funci\xf3n necesita tener otros bloques en su interior para funcionar." }, emptyFunctionalBlock: function () { return "Tienes un bloque con una entrada vac\xeda." }, emptyTopLevelBlock: function (e) { return "No hay bloques que ejecutar. Debes a\xf1adir un bloque al bloque " + common_locale.v(e, "topLevelBlockName") + "." }, end: function () { return "fin" }, errorEmptyFunctionBlockModal: function () { return "Deben haber bloques dentro de tu definici\xf3n de funci\xf3n. Haga clic en Editar y arrastre bloques dentro del bloque verde." }, errorIncompleteBlockInFunction: function () { return 'Haga clic en "Editar" para asegurarse de que no tienes ning\xfan bloque desaparecido dentro de su definici\xf3n de funci\xf3n.' }, errorParamInputUnattached: function () { return "Recuerda adjuntar un bloque a cada par\xe1metro de entrada en el bloque funci\xf3n en tu espacio de trabajo." }, errorQuestionMarksInNumberField: function () { return 'Intenta reemplazar "???" con un valor.' }, errorRequiredParamsMissing: function () { return "Crea un par\xe1metro para tu funci\xf3n haciendo clic en Editar y a\xf1adiendo los par\xe1metros necesarios. Arrastra los nuevos bloques par\xe1metro a la definici\xf3n de tu funci\xf3n." }, errorUnusedFunction: function () { return "Has creado una funci\xf3n pero nunca la has usado en tu espacio de trabajo. Haz clic en Funciones en la caja de herramientas y aseg\xfarate que la usas en tu programa." }, errorUnusedParam: function () { return "A\xf1adiste un bloque par\xe1metro pero no lo usaste en la definici\xf3n. Aseg\xfarate de que usas tu par\xe1metro haciendo clic en Editar y situando el bloque par\xe1metro dentro del bloque verde." }, exampleErrorMessage: function (e) { return "La funci\xf3n " + common_locale.v(e, "functionName") + " tiene uno o m\xe1s ejemplos que necesitan ajuste. Aseg\xfarate de que coincide con su definici\xf3n y responde a la pregunta." }, examplesFailedOnClose: function () { return "Uno o m\xe1s de sus ejemplos no coinciden con su definici\xf3n. Compruebe sus ejemplos antes de cerrar" }, extraTopBlocks: function () { return "Tienes bloques con entradas vac\xedas." }, extraTopBlocksWhenRun: function () { return 'Tienes bloques sin ataduras. \xbfQuisiste decir fijar \xe9stos al bloque "cuando ejecuta"?' }, finalStage: function () { return "\xa1Felicidades! Has completado la etapa final." }, finalStageTrophies: function (e) { return "\xa1Felicidades! Has completado la etapa final y ganaste  " + common_locale.p(e, "numTrophies", 0, "es", { one: "un trofeo", other: common_locale.n(e, "numTrophies") + " trofeos" }) + "." }, finish: function () { return "Terminar" }, generatedCodeInfo: function (e) { return "Este es tu código generado:" }, hashError: function () { return "Lo sentimos, '%1' no se corresponde con ning\xfan programa guardado." }, help: function () { return "Ayuda" }, hideToolbox: function () { return "(Ocultar)" }, hintHeader: function () { return "Aqu\xed hay un consejo:" }, hintPrompt: function () { return "\xbfNecesitas ayuda?" }, hintRequest: function () { return "" }, hintReviewTitle: function () { return "Revisa tus sugerencias" }, hintSelectInstructions: function () { return "Instrucciones y sugerencias anteriores" }, hintSelectNewHint: function () { return "Recibe una nueva sugerencia" }, hintTitle: function () { return "Sugerencia:" }, iconSearchPlaceholder: function () { return "Search for an icon..." }, ignore: function () { return "Ignorar" }, infinity: function () { return "Infinito" }, jump: function () { return "salta" }, keepPlaying: function () { return "Seguir jugando" }, levelIncompleteError: function () { return "Est\xe1s utilizando todos los tipos necesarios de bloques pero no de la manera correcta." }, listVariable: function () { return "lista" }, makeYourOwnFlappy: function () { return "Crea tu propio juego Flappy" }, missingRecommendedBlocksErrorMsg: function () { return "No exactamente. Prueba usando un bloque que a\xfan no est\xe9s usando." }, missingRequiredBlocksErrorMsg: function () { return "No has puesto ningún bloque" }, nestedForSameVariable: function () { return "Est\xe1s usando la misma variable en dos o m\xe1s ciclos anidados. Utiliza nombres de variables \xfanicos para evitar ciclos infinitos." }, nextLevel: function (e) { return "\xa1Felicidades! Completaste el Nivel 1 " + common_locale.v(e, "puzzleNumber") + "." }, nextLevelTrophies: function (e) { return "\xa1Felicidades! Completaste el Nivel 1 " + common_locale.v(e, "puzzleNumber") + " y ganaste " + common_locale.p(e, "numTrophies", 0, "es", { one: "un trofeo", other: common_locale.n(e, "numTrophies") + " trofeos" }) + "." }, nextPuzzle: function () { return "Siguiente problema" }, nextStage: function (e) { return "\xa1 Felicidades! Completaste " + common_locale.v(e, "stageName") + "." }, nextStageTrophies: function (e) { return "\xa1Felicidades! Completaste " + common_locale.v(e, "stageName") + " y ganaste " + common_locale.p(e, "numTrophies", 0, "es", { one: "a trophy", other: common_locale.n(e, "numTrophies") + " trophies" }) + "." }, noIconsFound: function () { return "No icons found" }, numBlocksNeeded: function (e) { return "\xa1Felicidades! Has completado el nivel  " + common_locale.v(e, "puzzleNumber") + ". (Sin embargo, podr\xedas haber usado s\xf3lo " + common_locale.p(e, "numBlocks", 0, "es", { one: "1 bloque", other: common_locale.n(e, "numBlocks") + " bloques" }) + ".)" }, numLinesOfCodeWritten: function (e) { return "" }, openWorkspace: function () { return "C\xf3mo funciona" }, orientationLock: function () { return "Desactiva el bloqueo de orientaci\xf3n en la configuraci\xf3n del dispositivo." }, pause: function () { return "Break" }, play: function () { return "jugar" }, print: function () { return "Imprimir" }, projectWarning: function () { return "Note: You are on a level that is part of a longer project.\u2002Changes made on this level will also appear in other levels in the project." }, puzzleTitle: function (e) { return "Puzzle " + common_locale.v(e, "puzzle_number") + " de " + common_locale.v(e, "stage_total") }, readonlyWorkspaceHeader: function () { return "S\xf3lo ver: " }, recommendedBlockContextualHintTitle: function () { return "Trate de usar un bloque como este para resolver el rompecabezas." }, repeat: function () { return "repetir" }, resetProgram: function () { return "Reiniciar" }, rotateText: function () { return "Gira tu dispositivo." }, runProgram: function () { return "Ejecutar" }, runTooltip: function () { return "Ejecuta el programa definido por los bloques del espacio de trabajo." }, runtimeErrorMsg: function (e) { return "Tu programa no se ejecut\xf3 adecuadamente. Por favor elimina la l\xednea " + common_locale.v(e, "lineNumber") + " e int\xe9ntalo de nuevo." }, saveToGallery: function () { return "Guardar en Galer\xeda" }, savedToGallery: function () { return "\xa1Guardado en la Galer\xeda!" }, score: function () { return "puntuaci\xf3n" }, sendToPhone: function () { return "Enviar al tel\xe9fono" }, shareFailure: function () { return "Perd\xf3n, no podemos compartir este programa." }, shareWarningsAge: function () { return "Por favor indica abajo tu edad y haz click en OK para continuar." }, shareWarningsMoreInfo: function () { return "M\xe1s informaci\xf3n" }, shareWarningsStoreData: function () { return "Esta aplicaci\xf3n desarrollada con Code Studio almacena datos que pueden ser vistos por cualquiera que comparta este enlace, as\xed que tenga cuidado si se le pide que proporcione informaci\xf3n personal." }, showBlock: function () { return "Get a block" }, showBlocksHeader: function () { return "Mostrar bloques" }, showCodeHeader: function () { return  }, showTextHeader: function () { return "Mostrar texto" }, showToolbox: function () { return "Mostrar el cuadro de herramientas" }, showVersionsHeader: function () { return "Historial de versiones" }, signup: function () { return "\xdanete al curso de introducci\xf3n" }, stepIn: function () { return "Step in" }, stepOver: function () { return "Step over" }, stepOut: function () { return "Step out" }, stringEquals: function () { return "cadena =?" }, submit: function () { return "Enviar" }, submitYourProject: function () { return "Env\xeda tu proyecto" }, submitYourProjectConfirm: function () { return "No puedes editar tu proyecto despu\xe9s de enviarlo, \xbfdeseas enviarlo ahora?" }, unsubmit: function () { return "NO enviado" }, unsubmitYourProject: function () { return "Retirar tu proyecto" }, unsubmitYourProjectConfirm: function () { return "Retirar tu proyecto tambi\xe9n reiniciar\xe1 la fecha de env\xedo, \xbfQuieres retirarlo?" }, subtitle: function () { return "un entorno de programaci\xf3n visual" }, syntaxErrorMsg: function (e) { return "Tu programa contiene un error tipogr\xe1fico. Por favor elimina la l\xednea " + common_locale.v(e, "lineNumber") + " e int\xe9ntalo de nuevo." }, textVariable: function () { return "texto" }, toggleBlocksErrorMsg: function () { return "Tienes que corregir un error en tu programa antes de que se pueda mostrar como bloques." }, tooManyBlocksMsg: function () { return "Puedes resolver este rompecabezas con <x id='START_SPAN'/><x id='END_SPAN'/> bloques." }, tooMuchWork: function () { return "\xa1Me has hecho trabajar mucho!  \xbfPodr\xedas tratar de repetir menos veces?" }, toolboxHeader: function () { return "Bloques" }, toolboxHeaderDroplet: function () { return "Caja de Herramientas" }, totalNumLinesOfCodeWritten: function (e) { return "Total: " + common_locale.p(e, "numLines", 0, "es", { one: "1 l\xednea", other: common_locale.n(e, "numLines") + " lineas" }) + " de c\xf3digo." }, tryAgain: function () { return "Vuelve a intentarlo" }, tryBlocksBelowFeedback: function () { return "Prueba usando uno de los siguientes bloques:" }, tryHOC: function () { return "Prueba la Hora del C\xf3digo" }, unnamedFunction: function () { return "Tienes una variable o funci\xf3n sin nombre. No olvides dar un nombre descriptivo a todo." }, wantToLearn: function () { return "\xbfQuieres aprender a programar?" }, watchVideo: function () { return "Mira el Video" }, when: function () { return "cuando" }, whenRun: function () { return "cuando se ejecuta" }, workspaceHeaderShort: function () { return "Espacio de trabajo: " }, errorGenericLintError: function () { return "Your program contains an editor warning that needs to be corrected. Hover over the icons near the line numbers in the editor to learn more." } };